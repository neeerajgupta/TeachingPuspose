Inheritance
Is A relationship

==>

Rule no 1->

1- Child class can be hold Parent class praperty
2- parrent class can not be hold child class praperty

h/w
parrent calulation plus and minus
child * and /


Type of Inhertance


1.Single
2.multilevel
3.hierachical
4.multipl
5.hybrid



HAS-A relationship:
-----------------------------------------------------------------------------------

1. HAS-A relationship is also known as composition (or) aggregation.
2. There is no specific keyword to implement HAS-A relationship but mostly we 
   can use new operator.
3. The main advantage of HAS-A relationship is reusability


Composition  :
-------------------------------
Without existing container object if there is no chance of existing contained objects then 
the relationship between container object and contained object is called composition 
which is a strong association


Aggregation:
-------------------------------
Without existing container object if there is a chance of existing contained objects such 
type of relationship is called aggregation. In aggregation objects have weak association.



Method signature
------------------
In java, method signature consists of name of the method followed by argument types

Example: public static void methodOne(iny a ,int b){}

			 methodOne(int a ,int b) 
					  --------------> //This is method signature
			 
 In java return type is not part of the method signature.
 Compiler will use method signature while resolving method calls.

			class Test {
			public void m1(double d) { }
			public void m2(int i) { }
			public static void main(String ar[]) {
			 Test t=new Test();
			 t.m1(10.5);
			 t.m2(10);
			}
			} 
			
			
***********************************************************************************

Polymorphism---> Same name Different Form is call Polymorphis
				abs();
				abs(int a,);
				abs(inta ,int b)